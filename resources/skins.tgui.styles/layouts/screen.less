/**
 * TGUI modern layout styles for screen
 *
 * Layout rules divide the page into sections and how TGUIComponents should be arranged in the skin.
 * The rules here should only define the layout, not color or typography.
 */

@import "grid.less";
@import "../variables.less";
@import "mediawiki.mixins.less";

@selector-main-menu-closed: ~"#mw-sidebar-checkbox:not( :checked )";
@selector-sidebar-no-toc-sidebar-closed: ~".tgui-toc-collapsed @{selector-main-menu-closed}";
@selector-sidebar-no-toc-sidebar-disabled: ~":not(:has(.sidebar-toc)) @{selector-main-menu-closed}";

// Content container

// Note this uses variables defined in mediawiki.skin.variables so that VisualEditor can read them
// see T259331.
@padding-content: @padding-top-content @padding-horizontal-content 1.5em;

// Breakpoints

// Defines the minimum viewport width, at which point the layout will not get any
// smaller and will start horizontal scrolling instead.
@min-width-supported: unit(500px / @font-size-browser, em) -
  (2 * @padding-horizontal-page-container-wide);
// 31.25em - 3.75em = 27.5em @ 16

h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--color-text);
}

body {
  overflow-y: scroll;
  overflow-x: hidden;
  background-color: var(--color-base);
  color: var(--color-text-darker);
  transition:
    background-color var(--transition-time),
    color var(--transition-time);
}

html,
body {
  scrollbar-color: var(--color-scrollbar-thumb) var(--color-scrollbar-base);
  scrollbar-width: 1.5vh;
}

// Hide Legacy ToC. It will be removed anyway, but we don't need to see it!
#toc {
  display: none;
}

.mw-body,
.parsoid-body {
  direction: ltr;
}

.mw-body {
  background-color: var(--color-base-section);

  .firstHeading {
    /* Change the default from mediawiki.skinning CSS to let indicators float into heading area */
    overflow: visible;
    margin-bottom: 0;
  }
}

.mw-ui-icon-element::before {
  filter: var(--invert-icon);
}

.mw-header {
  position: fixed;
  padding: 0.5em 0;
  backdrop-filter: var(--blur-intensity);
  background-color: var(--color-base-section);
  color: var(--color-text);
  width: 100%;
  top: 0;
  z-index: @z-index-header;
}

.mw-body-content {
  padding: 0 0.75em 0.75em 0.75em;
  margin-top: 1em;
}

/* Main column */
.mw-body,
#mw-data-after-content,
.mw-footer {
  margin-left: 0;
}

/* Content */
.mw-indicators {
  z-index: @z-index-indicators;
}

.mw-body-header,
.mw-body-subheader {
  .mixin-clearfix();
}

.mw-body .mw-portlet-lang {
  float: right;
}

.tgui-body {
  position: relative;
  z-index: @z-index-base;

  #contentSub,
  #contentSub2 {
    font-size: 84%;
    line-height: 1.2em;
    // T311564
    margin: 8px 0 0;
    color: var(--color-text-gray);
    width: auto;
  }
}

#left-navigation {
  float: left;
}

#right-navigation {
  float: right;

  #p-cactions {
    margin: 0;
    max-height: 3em;
    font-size: 1.1em;
    background-color: var(--color-primary);
    color: var(--color-text-static);
    border-radius: var(--border-radius-small);
    transition: background-color var(--transition-time);
    text-decoration: none;

    label {
      padding: 0.5em 0.75em 0.33em 0.75em;
      border-bottom: 2px solid transparent;
    }

    &:hover {
      background-color: var(--color-primary-light);
    }
  }

  .tgui-menu-content {
    right: 0;
  }
}

.parsoid-body {
  padding: @padding-content;
}

// Container logic.
.mw-page-container {
  position: relative;
  z-index: 0;
  max-width: 100%;
  min-height: 100%;
  margin-left: auto;
  margin-right: auto;
  min-width: @min-width-supported;
}

.skin--responsive .mw-page-container {
  min-width: auto;
}
