@import "../variables.less";

@search-placeholder-padding: 0 0.5em 0 36px;

/**
 * The search input.
 * Note that these rules only apply to the non-Vue enabled search input field.
 * When Vue.js has loaded this element will no longer be in the page and substituted with
 * a Codex element. Codex overrides into codexSearch.less
 */
.tgui-search-box {
  display: flex;
  flex-grow: 1;
  justify-content: center;
  font-size: @font-size-base;

  > form {
    max-width: 75%;
    flex-grow: 1;
  }
}

.tgui-search-box-inner {
  position: relative;
}

.tgui-search-box-input,
.searchButton {
  font-size: inherit;
}

.tgui-search-box-input {
  width: 100%;
  height: 32px;
  outline: none;
  padding: @search-placeholder-padding;
  background-color: var(--color-bg-section-light);
  color: var(--color-text);
  border: var(--border-classic);
  border-radius: var(--border-radius-small);
  transition: all var(--transition-time);

  .tgui-search-box-inner:hover & {
    border-color: var(--color-border-input);
  }

  .mixin-placeholder( {
		color: var(--color-text-translucent);
		opacity: 0.67;
	} );

  &::-webkit-search-decoration,
  &::-webkit-search-cancel-button,
  &::-webkit-search-results-button,
  &::-webkit-search-results-decoration {
    display: none;
  }
}

.searchButton {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 36px;
  border: 0;
  padding: 0;
  background-color: transparent;
  color: transparent;
  z-index: 1;
  pointer-events: none;
}

.searchButton[name="go"] {
  background-image: url(images/magnifying-glass-solid.svg);
  background-size: 1.25em;
  background-position: center;
  background-repeat: no-repeat;
  opacity: 0.5;
  filter: var(--invert-icon);
}
